allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    configurations.all {
        resolutionStrategy {
            forcedModules = [
                    "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}",
                    "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}",
            ]
        }
    }
}

ext {

    // region android libraries
    lifecycleVersion = "2.3.1"
    archVersion = "2.1.0"
    appCompatVersion = '1.2.0'
    androidLibraryVersion = '1.0.0'
    recyclerViewVersion = '1.1.0'
    materialDesignVersion = '1.3.0'
    constraintLayoutVersion = '2.0.4'
    androidActivityKtxVersion = '1.2.3'
    androidCoreKtxVersion = '1.5.0'
    swipeRefreshVersion = '1.1.0'
    coroutines_version = '1.4.2'

    appCompat = "androidx.appcompat:appcompat:${appCompatVersion}"
    fragment = "androidx.fragment:fragment:1.3.0"
    materialDesign = "com.google.android.material:material:${materialDesignVersion}"
    androidRecyclerView = "androidx.recyclerview:recyclerview:${recyclerViewVersion}"
    constraintLayout = "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"
    lifecycleViewModel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    lifecycleLiveData = "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    androidActivityKtx = "androidx.activity:activity-ktx:${androidActivityKtxVersion}"
    androidCoreKtx = "androidx.core:core-ktx:${androidCoreKtxVersion}"
    swipeRefresh = "androidx.swiperefreshlayout:swiperefreshlayout:${swipeRefreshVersion}"
    coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    //endregion

    // region kotlin
    kotlinSerializationVersion = '1.2.1'

    kotlinJdk = "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    kotlinSerialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:${kotlinSerializationVersion}"
    //endregion

    // region data and network
    retrofitVersion = '2.9.0'
    okHttpVersion = '4.9.1'
    okHttpConverterVersion = '0.8.0'

    retrofit = "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    retrofitRxAdapter = "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    retrofitGsonConverter = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    okHttp = "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    okHttpInterceptor = "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    okHttpConverter = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:${okHttpConverterVersion}"
    //endregion

    // region dependency injection
    koinVersion = '2.2.2'
    koinTest_version = '2.2.0-rc-4'

    koin = "org.koin:koin-androidx-viewmodel:${koinVersion}"
    koinTesting = "org.koin:koin-test:$koinTest_version"
    //endregion

    // region test dependencies
    junit_version = '1.1.2'
    mockitoKotlin_version = '2.2.0'
    mockitoInline_version = '2.28.2'
    archCoreTesting_version = '2.1.0'
    testRunner_version = '1.3.0'
    espresso_version = '3.3.0'
    rules_version = '1.3.0'
    extJunit_version = '1.1.2'
    mockWebServer_version = '4.9.0'
    okhttpIdling_version = '1.0.0'
    //endregion

    // region development dependencies
    timberVersion = '4.7.1'
    groupieVersion = '2.9.0'
    timber = "com.jakewharton.timber:timber:${timberVersion}"
    groupie = "com.github.lisawray.groupie:groupie:${groupieVersion}"
    groupieViewBinding = "com.github.lisawray.groupie:groupie-viewbinding:${groupieVersion}"
    //endregion

    androidDependencies = [
            [configuration: "implementation", dependency: appCompat],
            [configuration: "implementation", dependency: fragment],
            [configuration: "implementation", dependency: materialDesign],
            [configuration: "implementation", dependency: androidRecyclerView],
            [configuration: "implementation", dependency: constraintLayout],
            [configuration: "implementation", dependency: lifecycleViewModel],
            [configuration: "implementation", dependency: lifecycleLiveData],
            [configuration: "implementation", dependency: androidActivityKtx],
            [configuration: "implementation", dependency: androidCoreKtx],
            [configuration: "implementation", dependency: swipeRefresh],
    ]

    kotlinDependencies = [
            [configuration: "implementation", dependency: kotlinJdk],
            [configuration: "implementation", dependency: kotlinSerialization],
    ]

    networkDependencies = [
            [configuration: "implementation", dependency: retrofit],
            [configuration: "implementation", dependency: retrofitRxAdapter],
            [configuration: "implementation", dependency: retrofitGsonConverter],
            [configuration: "implementation", dependency: okHttp],
            [configuration: "implementation", dependency: okHttpInterceptor],
            [configuration: "implementation", dependency: okHttpConverter],
    ]

    koinDependencies = [
            [configuration: "implementation", dependency: koin]
    ]

    developmentDependencies = [
            [configuration: "implementation", dependency: timber],
            [configuration: "implementation", dependency: groupie],
            [configuration: "implementation", dependency: groupieViewBinding],
    ]

    testLibs = [
            junit        : "junit:junit:$junit_version",
            mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlin_version",
            mockitoInline: "org.mockito:mockito-inline:$mockitoInline_version",
            koinTest     : "org.koin:koin-test:$koinTest_version",
    ]

    androidxTestLibs = [
            archCoreTesting: "androidx.arch.core:core-testing:$archCoreTesting_version"
    ]

    androidTestLibs = [
            testRunner   : "androidx.test:runner:$testRunner_version",
            espresso     : "androidx.test.espresso:espresso-contrib:$espresso_version",
            rules        : "androidx.test:rules:$rules_version",
            extJunit     : "androidx.test.ext:junit-ktx:$extJunit_version",
            koinTest     : "org.koin:koin-test:$koinTest_version",
            mockWebServer: "com.squareup.okhttp3:mockwebserver:$mockWebServer_version",
            okhttpIdling : "com.jakewharton.espresso:okhttp3-idling-resource:$okhttpIdling_version"
    ]
}
